{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { debounceTime, switchMap } from 'rxjs/operators';\nimport { bookingUrls } from 'src/api-urls';\nimport { AddContactComponent } from '../components/add-contact/add-contact.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../master-data/master-data.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-pagination\";\nimport * as i8 from \"../../../shared/pipes/search.pipe\";\n\nfunction ContactsComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function ContactsComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.addContact(\"add\", null);\n    });\n    i0.ɵɵelement(1, \"i\", 29);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r7 == null ? null : item_r7.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r7 == null ? null : item_r7.vendor_name);\n  }\n}\n\nfunction ContactsComponent_th_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Status\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsComponent_th_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1, \"Actions\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsComponent_tr_39_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"div\", 31);\n    i0.ɵɵelementStart(2, \"input\", 32);\n    i0.ɵɵlistener(\"input\", function ContactsComponent_tr_39_td_11_Template_input_input_2_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const item_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.changeStatus(item_r8);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"label\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    const i_r9 = ctx_r15.index;\n    const item_r8 = ctx_r15.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"switch1\", i_r9, \"\");\n    i0.ɵɵproperty(\"checked\", item_r8.status == \"Active\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"switch1\", i_r9, \"\");\n  }\n}\n\nfunction ContactsComponent_tr_39_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"i\", 34);\n    i0.ɵɵlistener(\"click\", function ContactsComponent_tr_39_td_12_Template_i_click_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const item_r8 = i0.ɵɵnextContext().$implicit;\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.addContact(\"edit\", item_r8);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ContactsComponent_tr_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\", 21);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, ContactsComponent_tr_39_td_11_Template, 4, 3, \"td\", 22);\n    i0.ɵɵtemplate(12, ContactsComponent_tr_39_td_12_Template, 2, 0, \"td\", 22);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r9 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r8 == null ? null : item_r8.contact_name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r8 == null ? null : item_r8.phone_number, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r8 == null ? null : item_r8.email, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r8 == null ? null : item_r8.vendor, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.user != \"administrator\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.user != \"administrator\");\n  }\n}\n\nexport let ContactsComponent = /*#__PURE__*/(() => {\n  class ContactsComponent {\n    constructor(masterData, modal, http, toaster) {\n      this.masterData = masterData;\n      this.modal = modal;\n      this.http = http;\n      this.toaster = toaster;\n      this.vendorsData = [];\n      this.formData = {};\n      this.designations = [];\n      this.contacts = [];\n      this.onFilterChange = new EventEmitter();\n      this.search = {\n        vendor: ''\n      };\n    }\n\n    ngOnInit() {\n      this.getVendors();\n      this.getContacts();\n      this.company = JSON.parse(localStorage.getItem('companyData'));\n      let user = JSON.parse(localStorage.getItem('full_name'));\n      this.user = user.toLowerCase();\n    }\n\n    addContact(type, data) {\n      const modalRef = this.modal.open(AddContactComponent, {\n        size: 'lg',\n        centered: true\n      });\n\n      if (type === 'edit') {\n        this.formData = Object.assign({}, data);\n        this.eachContact = data.name;\n        modalRef.componentInstance.eachContact = data;\n      } else {\n        this.formData = {};\n        this.eachContact = '';\n      }\n\n      modalRef.result.then(result => {\n        if (result) {\n          this.getContacts();\n        }\n      });\n    }\n\n    onSubmit(form) {\n      if (form.valid) {\n        let method = this.eachContact ? 'put' : 'post';\n        let url = this.eachContact ? bookingUrls.contacts + `/${this.eachContact}` : bookingUrls.contacts;\n        this.http[method](url, this.formData).subscribe(res => {\n          if (res.data) {\n            this.eachContact ? this.toaster.success('Updated') : this.toaster.success('Saved');\n            this.modal.dismissAll();\n            this.getContacts();\n          } else {\n            this.toaster.error('something went wrong');\n          }\n        }, error => {\n          this.toaster.error(error.error._server_messages);\n        });\n      }\n\n      form.form.markAllAsTouched();\n    }\n\n    getVendors() {\n      const filters = [];\n      filters.push([\"Vendors\", `status`, \"=\", \"Active\"]);\n      this.http.get(bookingUrls.vendors, {\n        params: {\n          fields: JSON.stringify([\"*\"]),\n          limit_page_length: \"None\",\n          filters: JSON.stringify(filters)\n        }\n      }).subscribe(res => {\n        if (res.data) {\n          this.vendorsData = res.data;\n        }\n      });\n    }\n\n    getDesignations() {\n      const filters = [];\n      filters.push([\"Designations\", `status`, \"=\", \"Active\"]);\n      this.http.get(bookingUrls.designations, {\n        params: {\n          fields: JSON.stringify([\"*\"]),\n          limit_page_length: \"None\",\n          filters: JSON.stringify(filters)\n        }\n      }).subscribe(res => {\n        if (res.data) {\n          this.designations = res.data;\n        }\n      });\n    }\n\n    getContacts() {\n      var _a;\n\n      this.config = {\n        itemsPerPage: 20,\n        currentPage: 1,\n        totalItems: (_a = this.contacts) === null || _a === void 0 ? void 0 : _a.length\n      };\n      this.onFilterChange.pipe(debounceTime(300), switchMap(res => {\n        var _a, _b;\n\n        const filters = [];\n\n        if (this.search.vendor) {\n          filters.push([\"vendor\", \"=\", `${this.search.vendor}`]);\n        }\n\n        if ((_a = this.company) === null || _a === void 0 ? void 0 : _a.company_code) {\n          filters.push([\"company_code\", \"=\", `${(_b = this.company) === null || _b === void 0 ? void 0 : _b.company_code}`]);\n        }\n\n        return this.http.get(bookingUrls.getContacts, {\n          params: {\n            limit_page_length: \"None\",\n            fields: JSON.stringify(['*']),\n            filters: JSON.stringify(filters),\n            order_by: ['`tabContacts`.`' + 'modified' + '` ' + 'desc' + '']\n          }\n        });\n      })).subscribe(res => {\n        var _a, _b, _c;\n\n        if ((_a = res === null || res === void 0 ? void 0 : res.message) === null || _a === void 0 ? void 0 : _a.success) {\n          this.contacts = (_b = res.message) === null || _b === void 0 ? void 0 : _b.data;\n          this.config = {\n            itemsPerPage: 20,\n            currentPage: 1,\n            totalItems: (_c = this.contacts) === null || _c === void 0 ? void 0 : _c.length\n          };\n        }\n      });\n      this.onFilterChange.emit('');\n    }\n\n    changeStatus(element) {\n      element.status = element.status === 'Active' ? 'In-Active' : 'Active';\n      this.http.put(`${bookingUrls.contacts}/${element.name}`, element).subscribe(res => {\n        try {\n          if (res.data) {\n            this.getContacts();\n            this.toaster.success('Status Changed');\n          }\n        } catch (_a) {}\n      });\n    }\n\n    pageChanged($event) {\n      this.config.currentPage = event;\n    }\n\n  }\n\n  ContactsComponent.ɵfac = function ContactsComponent_Factory(t) {\n    return new (t || ContactsComponent)(i0.ɵɵdirectiveInject(i1.MasterDataService), i0.ɵɵdirectiveInject(i2.NgbModal), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  ContactsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactsComponent,\n    selectors: [[\"app-contacts\"]],\n    decls: 49,\n    vars: 13,\n    consts: [[1, \"my-3\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"card\", \"border-0\", \"shadow-sm\"], [1, \"card-body\", \"p-0\"], [1, \"row\", \"pt-3\", \"px-4\"], [1, \"col-md-7\"], [1, \"d-flex\", \"align-items-center\", \"mb-2\"], [1, \"m-0\"], [\"placement\", \"top\", \"ngbTooltip\", \"Add Contact\", \"class\", \"btn btn-primary ml-3 shadow\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"col-md-5\"], [1, \"d-flex\"], [1, \"flex-fill\"], [\"name\", \"vendor\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex-fill\", \"ml-3\"], [\"type\", \"search\", \"placeholder\", \"Search\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"table-responsive\", \"mt-2\"], [1, \"table\", \"table-sm\"], [1, \"text-center\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"px-4\"], [1, \"col-md-6\"], [1, \"col-md-6\", \"text-right\"], [3, \"pageChange\"], [\"placement\", \"top\", \"ngbTooltip\", \"Add Contact\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", \"ml-3\", \"shadow\", 3, \"click\"], [1, \"ri-add-line\"], [3, \"value\"], [1, \"custom-control\", \"custom-switch\"], [\"type\", \"checkbox\", 1, \"custom-control-input\", 3, \"checked\", \"id\", \"input\"], [1, \"custom-control-label\", 3, \"for\"], [\"placement\", \"top\", \"ngbTooltip\", \"Edit\", 1, \"ri-pencil-line\", 3, \"click\"]],\n    template: function ContactsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelementStart(9, \"h5\", 9);\n        i0.ɵɵelementStart(10, \"b\");\n        i0.ɵɵtext(11, \"Contacts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, ContactsComponent_button_12_Template, 2, 0, \"button\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 11);\n        i0.ɵɵelementStart(14, \"div\", 12);\n        i0.ɵɵelementStart(15, \"div\", 13);\n        i0.ɵɵelementStart(16, \"select\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactsComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.onFilterChange.emit($event);\n        })(\"ngModelChange\", function ContactsComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.search.vendor = $event;\n        });\n        i0.ɵɵelementStart(17, \"option\", 15);\n        i0.ɵɵtext(18, \"All Vendors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, ContactsComponent_option_19_Template, 2, 2, \"option\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 17);\n        i0.ɵɵelementStart(21, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactsComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.query = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 19);\n        i0.ɵɵelementStart(23, \"table\", 20);\n        i0.ɵɵelementStart(24, \"thead\");\n        i0.ɵɵelementStart(25, \"tr\");\n        i0.ɵɵelementStart(26, \"th\", 21);\n        i0.ɵɵtext(27, \"S.No\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Contact Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Phone\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"th\");\n        i0.ɵɵtext(35, \"Vendor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(36, ContactsComponent_th_36_Template, 2, 0, \"th\", 22);\n        i0.ɵɵtemplate(37, ContactsComponent_th_37_Template, 2, 0, \"th\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"tbody\");\n        i0.ɵɵtemplate(39, ContactsComponent_tr_39_Template, 13, 7, \"tr\", 23);\n        i0.ɵɵpipe(40, \"paginate\");\n        i0.ɵɵpipe(41, \"searchFilter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 24);\n        i0.ɵɵelementStart(43, \"div\", 25);\n        i0.ɵɵelementStart(44, \"small\", 9);\n        i0.ɵɵelementStart(45, \"b\");\n        i0.ɵɵtext(46, \"20 Records Per Page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"div\", 26);\n        i0.ɵɵelementStart(48, \"pagination-controls\", 27);\n        i0.ɵɵlistener(\"pageChange\", function ContactsComponent_Template_pagination_controls_pageChange_48_listener($event) {\n          return ctx.pageChanged($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.user != \"administrator\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.search.vendor);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vendorsData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.query);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.user != \"administrator\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.user != \"administrator\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(40, 7, i0.ɵɵpipeBind2(41, 10, ctx.contacts, ctx.query), ctx.config));\n      }\n    },\n    directives: [i5.NgIf, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgModel, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i5.NgForOf, i6.DefaultValueAccessor, i7.PaginationControlsComponent, i2.NgbTooltip],\n    pipes: [i7.PaginatePipe, i8.SearchPipe],\n    styles: [\"table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{font-size:18px;cursor:pointer}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:first-child{padding:0!important}\"]\n  });\n  return ContactsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}