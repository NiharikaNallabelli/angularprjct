{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar forms_1 = require(\"@angular/forms\");\n\nvar _1 = require(\"./\");\n\nvar ɵngcc0 = require('@angular/core');\n\nvar RANGE_VALIDATOR = {\n  provide: forms_1.NG_VALIDATORS,\n  useExisting: core_1.forwardRef(function () {\n    return RangeValidator;\n  }),\n  multi: true\n};\n\nvar RangeValidator = function () {\n  function RangeValidator() {}\n\n  RangeValidator.prototype.ngOnInit = function () {\n    this.validator = _1.range(this.range);\n  };\n\n  RangeValidator.prototype.ngOnChanges = function (changes) {\n    for (var key in changes) {\n      if (key === 'range') {\n        this.validator = _1.range(changes[key].currentValue);\n        if (this.onChange) this.onChange();\n      }\n    }\n  };\n\n  RangeValidator.prototype.validate = function (c) {\n    return this.validator(c);\n  };\n\n  RangeValidator.prototype.registerOnValidatorChange = function (fn) {\n    this.onChange = fn;\n  };\n\n  RangeValidator.ɵfac = function RangeValidator_Factory(t) {\n    return new (t || RangeValidator)();\n  };\n\n  RangeValidator.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: RangeValidator,\n    selectors: [[\"\", \"range\", \"\", \"formControlName\", \"\"], [\"\", \"range\", \"\", \"formControl\", \"\"], [\"\", \"range\", \"\", \"ngModel\", \"\"]],\n    inputs: {\n      range: \"range\"\n    },\n    features: [ɵngcc0.ɵɵProvidersFeature([RANGE_VALIDATOR]), ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return RangeValidator;\n}();\n/** @nocollapse */\n\n\nRangeValidator.ctorParameters = function () {\n  return [];\n};\n\nRangeValidator.propDecorators = {\n  'range': [{\n    type: core_1.Input\n  }]\n};\nexports.RangeValidator = RangeValidator; //# sourceMappingURL=directive.js.map","map":null,"metadata":{},"sourceType":"script"}